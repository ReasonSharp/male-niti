services:
  tlsoffloader:
    image: nginx:1.27.1
    ports:
      - "80:80"
      - "443:443"
    networks:
      - mb-platform
    restart: unless-stopped
    secrets:
      - source: tlsoffloaderconf
        target: /etc/nginx/nginx.conf
    volumes:
      - ./files/certificates/conf:/etc/letsencrypt
      - ./files/certificates/www:/var/www/certbot
      - ./files/www/html:/usr/share/nginx/html
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/dns-google:v2.11.0
    restart: unless-stopped
    volumes:
      - ./files/certificates/conf:/etc/letsencrypt
      - ./files/certificates/www:/var/www/certbot
    secrets:
      - source: certbotcredential
        target: /cred.json
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  db:
    image: postgres:17.0-alpine3.20
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${DB_PASS}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ./files/postgres:/var/lib/postgresql/data

  api:
    image: ${API_CONTAINER}:latest
    restart: unless-stopped
    ports:
      - "50000:50000"
    networks:
      - mb-platform   
    volumes:
      - ./files/${API_CONTAINER}/out:/public/out:rw

  blog:
    image: ${BLOG_CONTAINER}:latest
    restart: unless-stopped
    ports:
      - "50001:50001"
    networks:
      - mb-platform
    volumes:
      - ./files/${BLOG_CONTAINER}/out:/public/out:rw

  nakeddiaries:
    image: ${NAKEDDIARIES_CONTAINER}:latest
    restart: unless-stopped
    ports:
      - "50003:50003"
    networks:
      - mb-platform
    volumes:
      - ./files/${NAKEDDIARIES_CONTAINER}/out:/public/out:rw

  www:
    image: ${WWW_CONTAINER}:latest
    restart: unless-stopped
    ports:
      - "50002:50002"
    networks:
      - mb-platform
    volumes:
      - ./files/${WWW_CONTAINER}/out:/public/out:rw

networks:
  mb-platform:

secrets:
  tlsoffloaderconf:
    file: "./files/config/tlsoffloader.conf"
  rootpass:
    file: "./files/config/mysql-root-pass.txt"
  certbotcredential:
    file: "${DNS_CREDENTIALS}"
  postgrepass:
    file: "./files/config/postgre-pass.txt"